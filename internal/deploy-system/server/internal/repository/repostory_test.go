package repository

import (
	"context"
	_ "devops-platform/internal/common/init"
	"devops-platform/internal/deploy-system/server/internal/domain"
	"devops-platform/pkg/beans"
	"fmt"
	"testing"
)

var r Repository

func init() {
	beans.Register(domain.BeanRepository, &r)
	beans.Start()
}

func TestRepository_CreateImageRepository(t *testing.T) {
	command := &domain.CreateImageRepositoryCommand{
		Name:        "test",
		Address:     "127.0.0.1",
		Description: "test",
	}
	repository, err := command.ToImageRepository()
	if err != nil {
		t.Fatal(err)
	}
	err = r.CreateImageRepository(context.TODO(), repository)
	if err != nil {
		t.Fatal(err)
	}
}

func TestRepository_GetImageRepositoryByID(t *testing.T) {
	repository, err := r.GetImageRepositoryByID(context.TODO(), 1)
	if err != nil {
		t.Fatal(err)
	}
	fmt.Print(repository)
}

func TestRepository_CreateClusterServer(t *testing.T) {
	clusterServer := &domain.CreateClusterServerCommand{
		Name:                  "test",
		Description:           "test-cloud",
		Address:               "https://192.168.0.72:6443",
		CertificateAuthority:  "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJeE1EZ3lNakE0TWpFek1Gb1hEVE14TURneU1EQTRNakV6TUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBTHNmClh0SURvcEgyT3pLMjZWUnBOYWo1bVY0ZENVT3k3ZzQ0TU9NVzNscW1lK2tLdWtDdEI0WExoMytGQzVURksxSUkKUDJqcHNqVnV6SHNORFpjVVVlZ3BWS0Z5SGltazhDd0tNRHNISUxLNXNIZ0RRazhCUTlwdmFHdVhPTjBiODdVegpEYmVDeTlWOStSb0x0ZEhFTTVLRzJaZXF5ODloTm1tM2ZnYXNKTFEyQmlZeTVQZjJMeDNSVjVCLzRHNXJOck1DClVObnpKNnpaa1RJQVgya2pDcG1GWTVHNTgxelBucHJaVnQ0VUp5R1ZCaFVxT0ppZ1N2N2ZJUWM2RG5tbGxJV0UKNUhkRlNpejVRVm14dzZFNTh5SzBWdGdjZDNIS2NBSTlVTFNWU2YyTG00VlRaT1FidjJoQUhKSEpTRmJLanRhUQo2RjZzQ2RGUDNoNUlJT0liNDNrQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZEcFF4c2RuTTgxWlBGNTB0Rm1VMGpEU0JmMEFNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFDZHQxeGRQaWdIeWRQVVhZRTVpOU9RQnNGaVlMTDJGMUVpZm9RbmNibmF4MUNmZGZIYQpqVTRXbDhUWmxTMFZhazRvZUZrUnE0S3M3U05BTlpVaEROeUx6ZHc0RThYaWFIeXRFUkNVMitzbkdETUZJQmlHCkZmUVVnRzdGaFg2QzhDYkFUVTJyWWZ3d0pDQURCWVdoUERHZloyNWJyRS9KRzA4MFRwdEtNVVdYSW03cWNodjkKSlRJcWpKLzd2Yk1ISnh6S2I4UzFUMCs5SDNndm9jMm9xenN3VkRUeUtJNWV6SjJiN1dRMEpTSHlxNTZWL1dtTQpWVmJ5NmJVWVdNZGUvZFNoNkMvdlNHMEphWVM1Z2pYRmZialo5cklRRE9aandHTnNkbHBBaVIrdlNCNkR6TXZCCnoyTjI5a0tIMTJIVFRObTkwM1ViWmMxZHVwYXM5SUZaU0tSLwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
		UserClientCertificate: "LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURJVENDQWdtZ0F3SUJBZ0lJWkMwSFdQRzZZNkV3RFFZSktvWklodmNOQVFFTEJRQXdGVEVUTUJFR0ExVUUKQXhNS2EzVmlaWEp1WlhSbGN6QWVGdzB5TVRBNE1qSXdPREl4TXpCYUZ3MHlOREExTVRZd056VXdNREJhTURReApGekFWQmdOVkJBb1REbk41YzNSbGJUcHRZWE4wWlhKek1Sa3dGd1lEVlFRREV4QnJkV0psY201bGRHVnpMV0ZrCmJXbHVNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQW4vdzNKTWZPYy9hdFQ3ZUEKQkFOTjZqN29oOWx4WnEwZ0lKQi9KYzlObUx5MHQ1WXc3K2ZkSERVMkRMS0hDTDQ2UXV1YmhBSmUzejA2L09PegorYmw4cTZlNWM0dzNRalhZbGxYbUpxQ1NKVTNzU2RKcnBEV1JWUEJCeGNhRXNXekZpeHhEajF6ZHBnVFZ5QXROCnRvYTRVdEM3QWlYaGFDWFExMlhmTkFORFhNSWxKalByMjVsRjlHanlLYjV5bEdidFgraFhkcjZoRVZsSDZBeWMKRFlQOTFWTjlWOW54WTBpMkhUNXNHNHZHRHNKTi9aK05rbFdIYjRNV3ZnWXZ3bm1HM3g0b2NqMVFwTWN6V0puRgpFNEdmUDVUWW1HSUN2SmtDcjY5bWVNSGlzY1FTMjRCRWVpeFZ1RlRCY24zWUgxRGhaMkVYZ2hwNVo1TG5zRmpZCmdMZmZId0lEQVFBQm8xWXdWREFPQmdOVkhROEJBZjhFQkFNQ0JhQXdFd1lEVlIwbEJBd3dDZ1lJS3dZQkJRVUgKQXdJd0RBWURWUjBUQVFIL0JBSXdBREFmQmdOVkhTTUVHREFXZ0JRNlVNYkhaelBOV1R4ZWRMUlpsTkl3MGdYOQpBREFOQmdrcWhraUc5dzBCQVFzRkFBT0NBUUVBdEJoWDY1eHhGcXFvKzV1L3cvTkkxckpFeHIvbk50SkhVR3MrCldORjdtZDVvN3FjTVdZZk5NN0VtYjhJd2FKMkpqT2hrR1lLODVIMGhJNFBEcmNZNlVnZno0dGJYS3lkc1RqeDEKU2pqdjIwZUcvS0RVL2xsR3BwOVFKSER1cjRvV3QwUGs1YmhkamNrVWNwanRzOTk4ZnhDK29rWWRvWWQ4WURnLwo2MjlqMERNS29hS0hjYVZkdzVDYXdxMWoxMnFkY2dud0d5amxCeDVUU0REVHg4OW12R3kwaEJFNmJsTjdMakdlCktlTk9OOWRIdWtGb1hFTXRaOEluR1M3aDZlUWJxUHRHamJ3SndEYXRkOU5POEMrYU1vbC9CN2sxN3ZUT0puSHoKYXJhMkplV3ZRL1hnNUxXelQ5NjMyc2cvcFZZVEgvNkJoS0Rpc3hIVklPQkdpZGF4eHc9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==",
		UserClientKey:         "LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBbi93M0pNZk9jL2F0VDdlQUJBTk42ajdvaDlseFpxMGdJSkIvSmM5Tm1MeTB0NVl3CjcrZmRIRFUyRExLSENMNDZRdXViaEFKZTN6MDYvT096K2JsOHE2ZTVjNHczUWpYWWxsWG1KcUNTSlUzc1NkSnIKcERXUlZQQkJ4Y2FFc1d6Rml4eERqMXpkcGdUVnlBdE50b2E0VXRDN0FpWGhhQ1hRMTJYZk5BTkRYTUlsSmpQcgoyNWxGOUdqeUtiNXlsR2J0WCtoWGRyNmhFVmxINkF5Y0RZUDkxVk45VjlueFkwaTJIVDVzRzR2R0RzSk4vWitOCmtsV0hiNE1XdmdZdndubUczeDRvY2oxUXBNY3pXSm5GRTRHZlA1VFltR0lDdkprQ3I2OW1lTUhpc2NRUzI0QkUKZWl4VnVGVEJjbjNZSDFEaFoyRVhnaHA1WjVMbnNGallnTGZmSHdJREFRQUJBb0lCQUVUWm1qR3QrMTlVallsOQpBdzYzRFZUOTlieGhDN2lRVVA4eXNFVnBUWStweG13cnFxdlVNUWZ1cm5BUWRLU0NtVGdyaFNYdWp6MnJjRE5kCkd4c2hoRkdyUU5oRlE1S3U4YUxoSE1jSzIxcEtpcUhLZUtDV25SRGN4TEdFbVo1eG5TSWM2OFpLeE9pcHRBYi8KTmxhUzY4aFlJK0xzd25DN3RZQzlTcTFycWhYRW1VOWlXK05CcFRyWEd1VnpMU2o2ZUQ4dE0veVJyekNZeHRCbgpGaUVtczhaS05GUVFIZFZtRWJGSzBWQUhxeUJMRHFMK0hVRm9tK3RadFJPYzNLclFYYnYwTzZFdy8wUjVyNTZrCis4RGdqVzdLdlBPemcrWENxY3BicUw3bFlhVTBBVGVNWUl1cVltR2QvRkh1VzBWVk1oVU1ySWZsTmQ3aEZ5ZXcKYThwaGlTRUNnWUVBei9KUHRXNEU4YVpaQVBnUnRKcHZNZFR1enI1M2h0ZzI3cjhZd0NLNFdud3c1Y3lVQVVKTQo4enI5ekNMWjRZTHBZZk43WFlYcFc4bGpkZTYxNjgySnJzenEydFlmVXFZV3UzdUNPRDJ3QVJ0dnpUTE5RNy9JCjltbGZjZTJGWVo4UUxOOTl4Q2xKUlpheUc4dDlzVWxzT252aVdCakxPbmJLV0YvZjcxTzc5WDBDZ1lFQXhQU2MKaktSczIvcThJVXV3SVpubktsOTNSY0Q1Nm9nUTBVQ2t5OElwRldwYzZkVEtaNW5pNWpkWjZEdVFOU1hnczVCVApLcVNqOWxCL1FiWEZyZkNJek5BajZhNG43NlBwMVE5N0FtRk9vMFF6d0VxKytZQ3hRNFpGbmF5eEowTTY1dHdlCktvOEVqa0wyTlQ4MkRubjF1TG5wUWdDTVh1UExoTDN4Qk5Edkdjc0NnWUF2ZldBMHlBNTYvWW1BRGlkRS9xdjgKVG12SGJYb3dvbnBSSmZWS0UrUFVUbDZBYktzMGFtYldlWmR5b2xidUNJNnlId0FDaU0yVmQ3V3VQamp2eEQzNApYTFlhQ2lLWEpuVTBsZTFVV01vMFJvYk83eFl2cmNJQWZHb2V3NmJkZDQwaklscy9qRW8raVQ3ZDJDZzViOUkyCnZRb2hJbkJ2UnFmSmJRUGdUVmcwcFFLQmdRQ3V0ZW9VM0Zwd2ZLZmJ4VDgxWDBkdkVBWkdpeHRtVDFMVHZFc3oKTUVXdmFJMkpJeWgwNUU0aE42SjZYalBhNFlIRTUxYk84Z004SVVYeGJTUXcycmtQTGVkZGlBNkhCbGtMbGRMaApWcDRpT0FMTUpjSG9vNThiTGdXZEM2Nk9ESlk0YWJRY3ZvY2xCd05PVW9kS0tpZXR1TVRRdHBuT0pyWEhSNUtBCldqSnZKd0tCZ0Z4NlpkZTA1ZDF6ZUFaWWtOb3FsRE1WUGZQbWJNeVJKZXVRZ2dyay9SN2lRb2dzaE1QNk1mSE8KOUNWSFlJU1dRS2pyQ2svajVOMU0vRlNuRVNZWENyRUVweVpmaFZVZldFdkZEdEs5M1lReDgxZVFjMkJPbnZmbgplZVpaVE50TzhhYTBHT09kR1RiUW5QVHdmSGxDR0RWbXRNWEFmUjlhWWU3VUZpeVZtQlhVCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==",
	}
	server, err := clusterServer.ToClusterServer()
	if err != nil {
		t.Fatal(err)
	}
	err = r.CreateClusterServer(context.TODO(), server)
	if err != nil {
		t.Fatal(err)
	}
}
